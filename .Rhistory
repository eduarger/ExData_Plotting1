install.packages("KernSmooth")
search()
pwd
library(KernSmooth)
add2 <- function(x,y)
{
x+y
}
add2(10,100)
above10 <- function(x)
{
use <- x > 10
x[use]
}
above <- function(x,n)
{
use <- x > 10
x[use]
}
x <- 1:10
above(x,2)
x
above <- function(x,n)
{
use <- x > n
x[use]
}
above(x,2)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
pwd
pdw
cwd
cdw
pwd
getwd
getwd()
# Put comments here that give an overall description of what your
-## functions do
+## Below are two functions that are used to create a special object
+## that stores a matrix and cache its solve
-## Write a short comment describing this function
-
-makeCacheMatrix <- function(x = matrix()) {
+## The first function, makeCacheMatrix creates a special matrix,
+## which is really a list containing a function to:
+## 1) set the value of the matrix
+## 2) get the value of the matrix
+## 3) set the value of the solve
+## 4) get the value of the solve
+makeCacheMatrix <- function(x = matrix(x, nrow = , ncol = )) {
+      m <- NULL
+      set <- function(y) {
+            x <<- y
+            m <<- NULL
+      }
+      get <- function() x
+      setsolve <- function(solve) m <<- solve
+      getsolve <- function() m
+      list(set = set, get = get,
+           setsolve = setsolve,
+           getsolve = getsolve)
}
-
-## Write a short comment describing this function
+## The following function calculates the solve of the special matrix
+## created with the above function.
cacheSolve <- function(x, ...) {
-        ## Return a matrix that is the inverse of 'x'
-}
+      m <- x$getsolve()
+      if(!is.null(m)) {
+            message("getting cached data")
+            return(m)
+      }
+      data <- x$get()
+      m <- solve(data, ...)
+      x$setsolve(m)
+      m
+}
library(datasets)
data(cars)
with(cars, plot(speed, dist))
library(lattice)
state <- data.frame(state.x77, region= state.region)
xyplot(Life.Exp~Income | region=state, layout=c(4,1))
xyplot(Life.Exp~Income | region=state, layout=c(4,1))
xyplot(Life.Exp~Income | region, data=state, layout=c(4,1))
library(ggplot2)
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
defaults write org.R-project.R force.LANG en_US.UTF-8
defaults write org.R-project.R force.LANG en_US.UTF-8
pwd
cwd
wd
cwd
getwd()
setwd("~/ExData_Plotting1")
getwd()
# define the name of the data
zipfile="household_power_consumption.zip"
file="household_power_consumption.txt"
data <- read.csv(unz(zipfile, file), sep=";")
as.numeric(levels(data$Voltage))[data$Voltage]
xx<-as.numeric(levels(data$Voltage))[data$Voltage]
class(xx)
xx[1]
xx[5]
names(dat)
names(data)
x=data[,"Global_intensity"]
x=data[,"Global_intensity"][1]
factor
x
x=data[,"Global_intensity"][1:3]
x
levels(x)
?read.csv
data <- read.csv(unz(zipfile, file), sep=";", stringsAsFactors=FALSE)
# we will use data from 2007-02-01 to 2007-02-02, we will convert the data
data$Date=as.Date(data$Date, format = "%Y/%d/%m")
gg
zipfile="household_power_consumption.zip"
file="household_power_consumption.txt"
data <- read.csv(unz(zipfile, file), sep=";", stringsAsFactors=FALSE)
class(data$Date)
class(data$Voltage)
names(data)
numcols <- names(data)[3:length(names(data)]
numcols <- names(data)
numcols <- names(data)[3:last]
numcols <- names(data)[3:End]
numcols <- names(data)[3:]
length(numcols)
numcols <- names(data)[3:length(names(data))]
numcols <- names(data)[2:length(names(data))]
numcols <- names(data)[3:length(names(data))]
numcols
head(data[numcols[1]]
]
head(data[numcols[1]])
# define the name of the data
zipfile="household_power_consumption.zip"
file="household_power_consumption.txt"
data <- read.csv(unz(zipfile, file), sep=";", stringsAsFactors=FALSE)
# we will use data from 2007-02-01 to 2007-02-02, we will convert the data
data$Date=as.Date(data$Date, format = "%Y/%d/%m")
data$Time=strptime(data$Time, "%X")
numcols <- names(data)[3:length(names(data))]
data[numcols] <- lapply(data[numcols], as.numeric)
class(data$Voltage)
data$Time[1]
data$Time=strptime(data$Time, "%H:%M:%S")
data$Time[1]
data$Time[2]
#R script to filter the data into the dates required
# define the name of the data
zipfile="household_power_consumption.zip"
file="household_power_consumption.txt"
data <- read.csv(unz(zipfile, file), sep=";", stringsAsFactors=FALSE)
# we will use data from 2007-02-01 to 2007-02-02, we will filter the data
data$Date=as.Date(data$Date, format = "%Y/%d/%m")
data$Time=strptime(data$Time, "%H")
numcols <- names(data)[3:length(names(data))]
data[numcols] <- lapply(data[numcols], as.numeric)
#filtro <- data$Date> state
#data_fil <- data[filtro,]
data$Time[1]
#R script to filter the data into the dates required
# define the name of the data
zipfile="household_power_consumption.zip"
file="household_power_consumption.txt"
data <- read.csv(unz(zipfile, file), sep=";", stringsAsFactors=FALSE)
# we will use data from 2007-02-01 to 2007-02-02, we will filter the data
data$Date=as.Date(data$Date, format = "%Y/%d/%m")
data$Time=strptime(data$Time, "%H:%M:%S",usetz = FALSE)
numcols <- names(data)[3:length(names(data))]
data[numcols] <- lapply(data[numcols], as.numeric)
#filtro <- data$Date> state
#data_fil <- data[filtro,]
data$Time[1]
data$Date[1]
data$Date[3]
#R script to filter the data into the dates required
# define the name of the data
zipfile="household_power_consumption.zip"
file="household_power_consumption.txt"
data <- read.csv(unz(zipfile, file), sep=";", stringsAsFactors=FALSE)
# we will use data from 2007-02-01 to 2007-02-02, we will filter the data
data$Date=strptime(data$Date, "%H:%M:%S",usetz = FALSE)
data$Time=strptime(data$Time, "%H:%M:%S",usetz = FALSE)
numcols <- names(data)[3:length(names(data))]
data[numcols] <- lapply(data[numcols], as.numeric)
filter <
#filtro <- data$Date> state
#data_fil <- data[filtro,]
0
data$Date[1]
#R script to filter the data into the dates required
# define the name of the data
zipfile="household_power_consumption.zip"
file="household_power_consumption.txt"
data <- read.csv(unz(zipfile, file), sep=";", stringsAsFactors=FALSE)
# we will use data from 2007-02-01 to 2007-02-02, we will filter the data
data$Date=strptime(data$Date,"%Y-%d-%m", uset< = FALSE)
data$Time=strptime(data$Time, "%H:%M:%S",usetz = FALSE)
numcols <- names(data)[3:length(names(data))]
data[numcols] <- lapply(data[numcols], as.numeric)
filter <
#filtro <- data$Date> state
#data_fil <- data[filtro,]
0
data$Date[1]
class(data$Date[1])
class(data$Time[1])
class(data$Voltage[1])
mydates <- as.Date(data$Date)
data$Dates <- mydates
class(data$Date[1])
class(mydates)
mydates[1]
mydates[2]
mydates[3]
# define the name of the data
zipfile="household_power_consumption.zip"
file="household_power_consumption.txt"
data <- read.csv(unz(zipfile, file), sep=";", stringsAsFactors=FALSE)
View(data)
mydates <- as.Date(data$Date, "%d/%m/%Y")
mydates[1]
class(data$Date[1])
data$Date <- mydates
class(data$Date[1])
prueba=strptime(data$Time, "%H:%M:%S",usetz = FALSE)
prueba<-strptime(data$Time, "%H:%M:%S",usetz = FALSE)
class(data$Time)
data$Time[1]
prueba <- strptime(data$Time, "%H:%M:%S", usetz = FALSE)
prueba <- strptime(data$Time, "%H:%M:%S")
class(prueba)
prueba[1]
prueba <- strptime(data$Time, "%H:%M:%S", usetz = FALSE)
prueba <- format(data$Time, format="%H:%M:%S")
prueba[1]
prueba <- format(strptime(data$Time, "%H:%M:%S"), format="%H:%M:%S")
data$Date[1]
data$Date[1]>"2007-01-02"
data$Date[1]>"2005-01-02"
data$Date[1]>"2007-02-01"
#R script to filter the data into the dates required
# define the name of the data
zipfile="household_power_consumption.zip"
file="household_power_consumption.txt"
data <- read.csv(unz(zipfile, file), sep=";", stringsAsFactors=FALSE)
# we will use data from 2007-02-01 to 2007-02-02, we will filter the data
data$Date=as.Date(data$Date, "%d/%m/%Y")
numcols <- names(data)[3:length(names(data))]
data[numcols] <- lapply(data[numcols], as.numeric)
filter <- data$Date > "2007-02-01" & data$Date < "2007-02-02"
data_fil <- data[filter,]
head(filter)
data_fil <- data[filter]
data_fil <- subset(data, Date > "2007-02-01" & Date < "2007-02-02")
data$Date[10000]
data$Date[100000]
data$Date[99999]
data$Date[89999]
data$Date[79999]
data$Date[69999]
data$Date[68888]
data$Date[68888]>"2007-02-01"
data$Date[68888]>="2007-02-01"
data$Date[68888]<="2007-02-02"
data$Date[68888]<"2007-02-02"
data_fil <- subset(data, Date >= "2007-02-01" & Date <= "2007-02-02")
save(data_fil,file="data.Rda")
datoss <- load("data.Rda")
load("data.Rda")
View(data_fil)
del(data_fil)
remove(data_fil)
load("data.Rda")
# plot 1
# load the filter data frame
load("data_fil.Rda")
#R script to filter the data into the dates required
# define the name of the data
zipfile="household_power_consumption.zip"
file="household_power_consumption.txt"
data <- read.csv(unz(zipfile, file), sep=";", stringsAsFactors=FALSE)
# we will use data from 2007-02-01 to 2007-02-02, we will filter the data
data$Date=as.Date(data$Date, "%d/%m/%Y")
numcols <- names(data)[3:length(names(data))]
data[numcols] <- lapply(data[numcols], as.numeric)
data_fil <- subset(data, Date >= "2007-02-01" & Date <= "2007-02-02")
save(data_fil,file="data_fil.Rda")
# plot 1
# load the filter data frame
load("data_fil.Rda")
names(data_fil)
load("data_fil.Rda")
hist(data_fil$Global_active_power)
# plot 1
# load the filter data frame that was filter with the dates
load("data_fil.Rda")
hist(data_fil$Global_active_power, col="red")
# plot 1
# load the filter data frame that was filter with the dates
load("data_fil.Rda")
hist(data_fil$Global_active_power, col="red")
title("Global Active Power")
par("title")
par("col")
par("bg")
par("bg")="transparent"
title(Main = "Global Active Power")
title(main = "Global Active Power")
hist(data_fil$Global_active_power, col="red")
title(main = "Global Active Power")
dev.cur()
set.cur(2)
dev.set(3)
hist(data_fil$Global_active_power, col="red")
title(main = "Global Active Power")
dev.display(9)
dev.show(3)
